(async()=>{let openSouceLicense={self:{version:"1.32",name:"Emby Danmaku Extension(fork)",license:"MIT License",url:"https://github.com/chen3861229/dd-danmaku"},original:{version:"1.11",name:"Emby Danmaku Extension",license:"MIT License",url:"https://github.com/RyoLee/emby-danmaku"},jellyfinFork:{version:"1.45",name:"Jellyfin Danmaku Extension",license:"MIT License",url:"https://github.com/Izumiko/jellyfin-danmaku"},danmaku:{version:"2.0.6",name:"Danmaku",license:"MIT License",url:"https://github.com/weizhenye/Danmaku"},dandanplayAPI:{version:"v2",name:"弹弹play API",license:"MIT License",url:"https://github.com/kaedei/dandanplay-libraryindex"}},apiPrefix="https://ddplay-api.7o7o.cc/cors/https://api.dandanplay.net/api/v2",dandanplayAPI={searchEpisodes:(anime,episode)=>apiPrefix+"/search/episodes?anime="+anime+(episode?"&episode="+episode:""),comment:(episodeId,chConvert)=>apiPrefix+`/comment/${episodeId}?withRelated=true&chConvert=`+chConvert,extcomment:url=>apiPrefix+"/extcomment?url="+encodeURI(url),posterImg:animeId=>`https://img.dandanplay.net/anime/${animeId}.jpg`},check_interval=200,LOAD_TYPE={CHECK:"check",INIT:"init",REFRESH:"refresh",RELOAD:"reload",SEARCH:"search"},isVersionOld=!1,mediaContainerQueryStr=".graphicContentContainer",mediaQueryStr="video",eleIds={danmakuSwitchBtn:"danmakuSwitchBtn",danmakuCtr:"danmakuCtr",danmakuWrapper:"danmakuWrapper",h5VideoAdapter:"h5VideoAdapter",dialogContainer:"dialogContainer",danmakuSwitchDiv:"danmakuSwitchDiv",danmakuSwitch:"danmakuSwitch",danmakuSearchNameDiv:"danmakuSearchNameDiv",danmakuSearchName:"danmakuSearchName",danmakuSearchEpisode:"danmakuSearchEpisode",danmakuEpisodeFlag:"danmakuEpisodeFlag",danmakuAnimeDiv:"danmakuAnimeDiv",danmakuSwitchEpisode:"danmakuSwitchEpisode",danmakuEpisodeNumDiv:"danmakuEpisodeNumDiv",danmakuEpisodeLoad:"danmakuEpisodeLoad",danmakuRemark:"danmakuRemark",danmakuAnimeSelect:"danmakuAnimeSelect",danmakuEpisodeNumSelect:"danmakuEpisodeNumSelect",searchImg:"searchImg",extConmentSearchDiv:"extConmentSearchDiv",extUrlsDiv:"extUrlsDiv",currentMatchedDiv:"currentMatchedDiv",filteringDanmaku:"filteringDanmaku",danmakuTypeFilterDiv:"danmakuTypeFilterDiv",danmakuTypeFilterSelectName:"danmakuTypeFilterSelectName",danmakuSourceFilterDiv:"danmakuSourceFilterDiv",danmakuSourceFilterSelectName:"danmakuSourceFilterSelectName",danmakuShowSourceDiv:"danmakuShowSourceDiv",danmakuShowSourceSelectName:"danmakuShowSourceSelectName",danmakuEngineDiv:"danmakuEngineDiv",danmakuChConverDiv:"danmakuChConverDiv",danmakuFilterLevelDiv:"danmakuFilterLevelDiv",danmakuHeightRateDiv:"danmakuHeightRateDiv",danmuListDiv:"danmuListDiv",danmuListText:"danmakuListText",filterKeywordsDiv:"filterKeywordsDiv",danmakuSizeDiv:"danmakuSizeDiv",danmakuSizeLabel:"danmakuSizeLabel",danmakuOpacityDiv:"danmakuOpacityDiv",danmakuOpacityLabel:"danmakuOpacityLabel",danmakuSpeedDiv:"danmakuSpeedDiv",danmakuSpeedLabel:"danmakuSpeedLabel",timelineOffsetDiv:"timelineOffsetDiv",timelineOffsetLabel:"timelineOffsetLabel",settingsCtrl:"settingsCtrl",settingsText:"settingsText",settingsImportBtn:"settingsImportBtn",settingReloadBtn:"settingReloadBtn",filterKeywordsEnableId:"filterKeywordsEnableId",filterKeywordsId:"filterKeywordsId",consoleLogCtrl:"consoleLogCtrl",consoleLogText:"consoleLogText",debugCheckbox:"debugCheckbox",debugButton:"debugButton"};var embyOffsetBtnStyle="margin: 0;padding: 0;";let iconKeys={replay_30:"replay_30",replay_10:"replay_10",replay_5:"replay_5",replay:"replay",reset:"repeat",forward_media:"forward_media",forward_5:"forward_5",forward_10:"forward_10",forward_30:"forward_30",comment:"comment",comments_disabled:"comments_disabled",switch_on:"toggle_on",switch_off:"toggle_off",setting:"tune",search:"search",done:"done_all",done_disabled:"remove_done",more:"more_horiz",close:"close",refresh:"refresh",block:"block",text_format:"translate"},currentDanmakuInfoContainerId="danmakuTab2",mediaBtnOpts=[{id:eleIds.danmakuSwitchBtn,label:"弹幕开关",iconKey:iconKeys.comment,onClick:doDanmakuSwitch},{label:"弹幕设置",iconKey:iconKeys.setting,onClick:function(){var html=`<div id="${eleIds.dialogContainer}"></div>`;(async opts=>(opts={text:"",title:"",timeout:0,html:"",buttons:[],...opts},require(["dialog"]).then(items=>items[0]?.(opts)).catch(error=>{console.log("点击弹出框外部取消: "+error)})))({html:html,buttons:[{name:"关闭"}]}),waitForElement("#"+eleIds.dialogContainer,afterEmbyDialogCreated)}}],danmakuTabOpts=[{id:"danmakuTab0",name:"弹幕设置",buildMethod:function(containerId){let container=document.getElementById(containerId),template=`
            <div style="display: flex; justify-content: center;">
                <div>
                    <div id="${eleIds.danmakuSwitchDiv}" style="margin-bottom: 0.2em;">
                        <label class="${embyLabelClass}">${lsKeys.switch.name} </label>
                    </div>
                    <div id="${eleIds.danmakuChConverDiv}" style="margin-bottom: 0.2em;">
                        <label class="${embyLabelClass}">${lsKeys.chConvert.name}: </label>
                    </div>
                    <div id="${eleIds.danmakuEngineDiv}" style="margin-bottom: 0.2em;">
                        <label class="${embyLabelClass}">${lsKeys.engine.name}: </label>
                    </div>
                    <label class="${embyLabelClass}">弹幕样式: </label>
                    <div style="${embySliderStyle}">
                        <label class="${embyLabelClass}" style="width:4em;">${lsKeys.fontSizeRate.name}: </label>
                        <div id="${eleIds.danmakuSizeDiv}" style="width: 15.5em; text-align: center;"></div>
                        <label id="${eleIds.danmakuSizeLabel}" style="width:4em;"></label>
                    </div>
                    <div style="${embySliderStyle}">
                        <label class="${embyLabelClass}" style="width:4em;">${lsKeys.fontOpacity.name}: </label>
                        <div id="${eleIds.danmakuOpacityDiv}" style="width: 15.5em; text-align: center;"></div>
                        <label id="${eleIds.danmakuOpacityLabel}" style="width:4em;"></label>
                    </div>
                    <div style="${embySliderStyle}">
                        <label class="${embyLabelClass}" style="width:4em;">${lsKeys.speed.name}: </label>
                        <div id="${eleIds.danmakuSpeedDiv}" style="width: 15.5em; text-align: center;"></div>
                        <label id="${eleIds.danmakuSpeedLabel}" style="width:4em;"></label>
                    </div>
                    <div style="${embySliderStyle}">
                        <label class="${embyLabelClass}" style="width:4em;">${lsKeys.timelineOffset.name}: </label>
                        <div id="${eleIds.timelineOffsetDiv}" style="width: 15.5em; text-align: center;"></div>
                        <label id="${eleIds.timelineOffsetLabel}" style="width:4em;"></label>
                    </div>
                    <div id="${eleIds.settingsCtrl}" style="margin: 0.6em 0;"></div>
                    <textarea id="${eleIds.settingsText}" style="display: none;resize: vertical;width: 100%" rows="20" 
                        is="emby-textarea" class="txtOverview emby-textarea"></textarea>
                </div>
            </div>
        `;container.innerHTML=template.trim(),container.querySelector("#"+eleIds.danmakuSwitchDiv).prepend(embyButton({id:eleIds.danmakuSwitch,label:"弹幕开关",iconKey:lsGetItem(lsKeys.switch.id)?iconKeys.switch_on:iconKeys.switch_off,style:(lsGetItem(lsKeys.switch.id)?"color:#52b54b;":"")+"font-size:1.5em;padding:0;"},doDanmakuSwitch)),container.querySelector("#"+eleIds.danmakuChConverDiv).appendChild(embyTabs(danmakuChConverOpts,window.ede.chConvert,"id","name",doDanmakuChConverChange)),container.querySelector("#"+eleIds.danmakuEngineDiv).appendChild(embyTabs(danmakuEngineOpts,lsGetItem(lsKeys.engine.id),"id","name",doDanmakuEngineSelect));let fontSizeRate=lsGetItem(lsKeys.fontSizeRate.id),fontOpacity=lsGetItem(lsKeys.fontOpacity.id),danmakuSpeed=lsGetItem(lsKeys.speed.id),sizeSlider=embySlider({labelId:eleIds.danmakuSizeLabel,key:lsKeys.fontSizeRate.id},{value:fontSizeRate},onDanmakuStyleChange,onDanmakuStyleChangeLabel),alphaSlider=embySlider({labelId:eleIds.danmakuOpacityLabel,key:lsKeys.fontOpacity.id},{max:1,value:fontOpacity},onDanmakuStyleChange,onDanmakuStyleChangeLabel),speedSlider=embySlider({labelId:eleIds.danmakuSpeedLabel,key:lsKeys.speed.id},{value:danmakuSpeed},onDanmakuStyleChange,onDanmakuStyleChangeLabel),btnContainer=(container.querySelector("#"+eleIds.danmakuSizeDiv).appendChild(sizeSlider),container.querySelector("#"+eleIds.danmakuOpacityDiv).appendChild(alphaSlider),container.querySelector("#"+eleIds.danmakuSpeedDiv).appendChild(speedSlider),document.getElementById(eleIds.danmakuSizeLabel).innerText=fontSizeRate,document.getElementById(eleIds.danmakuOpacityLabel).innerText=fontOpacity,document.getElementById(eleIds.danmakuSpeedLabel).innerText=danmakuSpeed,container.querySelector("#"+eleIds.timelineOffsetDiv)),timelineOffsetOpts={labelId:eleIds.timelineOffsetLabel,key:lsKeys.timelineOffset.id};onDanmakuStyleChangeLabel(lsGetItem(lsKeys.timelineOffset.id),timelineOffsetOpts),timelineOffsetBtns.forEach(btn=>{btnContainer.appendChild(embyButton(btn,e=>{if(e.target){var oldValue=lsGetItem(lsKeys.timelineOffset.id);let newValue=oldValue+(parseFloat(e.target.getAttribute("valueOffset"))||0);onDanmakuStyleChange(newValue=newValue===oldValue?0:newValue,timelineOffsetOpts)}}))}),(container=>{(container=container.querySelector("#"+eleIds.settingsCtrl)).appendChild(embyButton({label:"配置",iconKey:iconKeys.more},e=>{let checked=!e.target.checked;e.target.checked=checked,e.target.title=checked?"关闭":"配置",e.target.firstChild.innerHTML=checked?iconKeys.close:iconKeys.more;e=document.getElementById(eleIds.settingsText);e.style.display=checked?"":"none",checked&&(e.value=getSettingsJson(2)),[eleIds.settingReloadBtn,eleIds.settingsImportBtn].forEach(id=>{document.getElementById(id).style.display=checked?"":"none"})})),container.appendChild(embyButton({id:eleIds.settingReloadBtn,label:"刷新",iconKey:iconKeys.refresh,style:"display: none;"},()=>document.getElementById(eleIds.settingsText).value=getSettingsJson(2))),container.appendChild(embyButton({id:eleIds.settingsImportBtn,label:"应用",iconKey:iconKeys.done,style:"display: none;"},()=>{((keyValues,needCheck=!0)=>{if(needCheck)return Object.entries(keyValues).reduce((acc,[id,value])=>acc||lsCheckSet(id,value),!1);Object.entries(keyValues).forEach(([key,value])=>lsSetItem(key,value))})(JSON.parse(document.getElementById(eleIds.settingsText).value)),loadDanmaku(LOAD_TYPE.INIT),closeEmbyDialog()}))})(container)}},{id:"danmakuTab1",name:"手动匹配",buildMethod:function(containerId){let container=document.getElementById(containerId),comments=window.ede.danmuCache[window.ede.episode_info?.episodeId]??[],template=`
            <div>
                <div>
                    <label class="${embyLabelClass}">标题: </label>
                    <div style="display: flex;" id="${eleIds.danmakuSearchNameDiv}"></div>
                </div>
                <div id="${eleIds.danmakuEpisodeFlag}" hidden>
                    <div style="display: flex;">
                        <div style="width: 80%;">
                            <label class="${embyLabelClass}">媒体名: </label>
                            <div id="${eleIds.danmakuAnimeDiv}" class="${embySelectWrapperClass}"></div>
                            <label class="${embyLabelClass}">分集名: </label>
                            <div style="display: flex;">
                                <div id="${eleIds.danmakuEpisodeNumDiv}" style="max-width: 90%;" class="${embySelectWrapperClass}"></div>
                                <div id="${eleIds.danmakuEpisodeLoad}"></div>
                            </div>
                        </div>
                        <img id="${eleIds.searchImg}" style="width: 20%;height: 100%;margin: 2%;"
                            loading="lazy" decoding="async" draggable="false" class="coveredImage-noScale"></img>
                        </div>
                    </div>
                <div>
                    <label class="${embyLabelClass}" id="${eleIds.danmakuRemark}"></label>
                </div>
                <div>
                    <h3>匹配源</h3>
                    <div>
                        <div id="${eleIds.currentMatchedDiv}">
                            <label class="${embyLabelClass}">弹弹play总量: ${comments.length}</label>
                        </div>
                        <label class="${embyLabelClass}">弹弹play附加第三方url: </label>
                    </div>
                    <div id="${eleIds.extUrlsDiv}"></div>
                </div>
                <div>
                    <h3>附加弹幕</h3>
                    <label class="${embyLabelClass}">弹弹play支持解析的第三方url(如A/B/C站): </label>
                    <div style="display: flex;" id="${eleIds.extConmentSearchDiv}"></div>
                </div>
            </div>
        `;container.innerHTML=template.trim();containerId=container.querySelector("#"+eleIds.danmakuSearchNameDiv);containerId.appendChild(embyInput({id:eleIds.danmakuSearchName,value:window.ede.searchDanmakuOpts.animeName,type:"search"},doDanmakuSearchEpisode)),containerId.appendChild(embyButton({id:eleIds.danmakuSearchEpisode,label:"搜索",iconKey:iconKeys.search},doDanmakuSearchEpisode)),containerId.appendChild(embyButton({label:"切换[原]标题",iconKey:iconKeys.text_format},doSearchTitleSwtich)),container.querySelector("#"+eleIds.danmakuEpisodeLoad).appendChild(embyButton({id:eleIds.danmakuSwitchEpisode,label:"加载弹幕",iconKey:iconKeys.done},doDanmakuSwitchEpisode)),((container,comments)=>{container.querySelector("#"+eleIds.extConmentSearchDiv).appendChild(embyInput({type:"search",placeholder:"http(s)://"},async e=>{let extUrl=e.target.value.trim();if(!extUrl.startsWith("http"))return embyToast({text:"输入的url错误!"});let extcomments=window.ede.extConmentCache[extUrl],allComments=(extcomments||((extcomments=await(async extUrl=>{let extcomments=await fetchExtcomment(extUrl);return extcomments=0===extcomments.length?await fetchExtcomment(extUrl):extcomments})(extUrl)).map(c=>c.fromUrl=extUrl),window.ede.extConmentCache[extUrl]=extcomments),comments.concat(...Object.values(window.ede.extConmentCache)));createDanmaku(allComments).then(()=>{var beforeLength=window.ede.commentsParsed.length-extcomments.length;embyToast({text:`此次附加总量: ${extcomments.length}, 附加前总量: ${beforeLength}, 附加后总量: `+allComments.length}),console.log("附加弹幕就位, 附加前总量: "+beforeLength);let currentMatchedDiv=container.querySelector("#"+eleIds.currentMatchedDiv),extUrlsDiv=(comments&&!currentMatchedDiv.querySelector("button")&&currentMatchedDiv.prepend(embyButton({label:"清空此加载",iconKey:iconKeys.close},e=>{var xChecked=!e.target.xChecked;0<(allComments=(xChecked?[]:comments).concat(...Object.values(window.ede.extConmentCache))).length&&(e.target.xChecked=xChecked,e.target.title=xChecked?"还原":"清空此加载",e.target.firstChild.innerHTML=xChecked?iconKeys.refresh:iconKeys.close,createDanmaku(allComments))})),container.querySelector("#"+eleIds.extUrlsDiv));extUrlsDiv.innerHTML="",Object.entries(window.ede.extConmentCache).map(([key,val])=>{var extUrlDiv=document.createElement("div");extUrlDiv.append(embyButton({label:"清空此加载",iconKey:iconKeys.close},e=>{delete window.ede.extConmentCache[key],e.target.parentNode.remove(),0===Object.keys(window.ede.extConmentCache).length&&(e=currentMatchedDiv.querySelector("button"))&&(e.remove(),e.firstChild.textContent===iconKeys.refresh)&&e.click(),createDanmaku(allComments.filter(c=>c.fromUrl!==key))})),extUrlDiv.append(embyALink(key,key),document.createTextNode(" 总量: "+val.length)),extUrlsDiv.append(extUrlDiv)})}).catch(err=>console.log(err))}))})(container,comments)}},{id:currentDanmakuInfoContainerId,name:"弹幕信息",buildMethod:buildCurrentDanmakuInfo},{id:"danmakuTab3",name:"弹幕屏蔽",buildMethod:function(containerId){let container=document.getElementById(containerId),template=`
            <div>
                <div id="${eleIds.danmakuTypeFilterDiv}" style="margin-bottom: 0.2em;">
                    <label class="${embyLabelClass}">${lsKeys.typeFilter.name}: </label>
                </div>
                <div id="${eleIds.danmakuSourceFilterDiv}">
                    <label class="${embyLabelClass}">${lsKeys.sourceFilter.name}: </label>
                </div>
                <div id="${eleIds.danmakuShowSourceDiv}">
                    <label class="${embyLabelClass}">${lsKeys.showSource.name}: </label>
                </div>
                <div id="${eleIds.danmakuFilterLevelDiv}">
                    <label class="${embyLabelClass}">${lsKeys.filterLevel.name}: </label>
                </div>
                <div id="${eleIds.danmakuHeightRateDiv}">
                    <label class="${embyLabelClass}">${lsKeys.heightRate.name}: </label>
                </div>
                <div id="${eleIds.filterKeywordsDiv}" style="margin-bottom: 0.2em;">
                    <label class="${embyLabelClass}">${lsKeys.filterKeywords.name}: </label>
                </div>
            </div>
        `;container.innerHTML=template.trim(),container.querySelector("#"+eleIds.danmakuTypeFilterDiv).appendChild(embyCheckboxList(null,eleIds.danmakuTypeFilterSelectName,lsGetItem(lsKeys.typeFilter.id),Object.values(danmakuTypeFilterOpts),doDanmakuTypeFilterSelect)),container.querySelector("#"+eleIds.danmakuSourceFilterDiv).appendChild(embyCheckboxList(null,eleIds.danmakuSourceFilterSelectName,lsGetItem(lsKeys.sourceFilter.id),Object.values(danmakuSource),doDanmakuSourceFilterSelect)),container.querySelector("#"+eleIds.danmakuShowSourceDiv).appendChild(embyCheckboxList(null,eleIds.danmakuShowSourceSelectName,lsGetItem(lsKeys.showSource.id),Object.values(showSource),doDanmakuShowSourceSelect)),container.querySelector("#"+eleIds.danmakuFilterLevelDiv).appendChild(embyTabs(danmakuFilterLevelOpts,lsGetItem(lsKeys.filterLevel.id),"id","name",value=>{lsCheckSet(lsKeys.filterLevel.id,parseInt(value.id))&&loadDanmaku(LOAD_TYPE.RELOAD)})),container.querySelector("#"+eleIds.danmakuHeightRateDiv).appendChild(embyTabs(danmakuHeightRateOpts,lsGetItem(lsKeys.heightRate.id),"id","name",value=>{lsCheckSet(lsKeys.heightRate.id,value.id)&&loadDanmaku(LOAD_TYPE.RELOAD)}));let keywordsContainer=container.querySelector("#"+eleIds.filterKeywordsDiv),keywordsEnableDiv=keywordsContainer.appendChild(document.createElement("div")),keywordsBtn=embyButton({label:"加载关键词过滤",iconKey:iconKeys.done_disabled},doDanmakuFilterKeywordsBtnClick),label=(keywordsBtn.disabled=!0,keywordsEnableDiv.setAttribute("style","display: flex; justify-content: space-between; align-items: center; width: 100%;"),keywordsEnableDiv.appendChild(embyCheckbox({id:eleIds.filterKeywordsEnableId,label:lsKeys.filterKeywordsEnable.name.replace(lsKeys.filterKeywords.name,"")},lsGetItem(lsKeys.filterKeywordsEnable.id),flag=>updateFilterKeywordsBtn(keywordsBtn,flag,document.getElementById(eleIds.filterKeywordsId).value.trim()))),keywordsEnableDiv.appendChild(document.createElement("div")).appendChild(keywordsBtn),keywordsContainer.appendChild(document.createElement("div")).appendChild(((props,onBlur)=>{props={rows:10,styleResize:"vertical",readonly:!1,...props};let textarea=document.createElement("textarea",{is:"emby-textarea"});return Object.entries(props).forEach(([key,value])=>{"function"!=typeof value&&"readonly"!==key&&"styleResize"!==key&&"value"!==key&&textarea.setAttribute(key,value)}),textarea.className="txtOverview emby-textarea",textarea.readOnly=props.readonly,textarea.style.resize=props.styleResize,textarea.value=props.value,"function"==typeof onBlur&&textarea.addEventListener("blur",onBlur),textarea})({id:eleIds.filterKeywordsId,value:lsGetItem(lsKeys.filterKeywords.id),style:"width: 100%;margin-top: 0.2em;",rows:8},event=>updateFilterKeywordsBtn(keywordsBtn,document.getElementById(eleIds.filterKeywordsEnableId).checked,event.target.value.trim()))),document.createElement("label"));label.innerText=`关键词/正则匹配过滤,支持过滤[正文,${Object.values(showSource).map(o=>o.name).join()}],多个表达式用换行分隔`,label.className=embyFieldDescClass,keywordsContainer.appendChild(document.createElement("div")).appendChild(label)}},{id:"danmakuTab4",name:"关于",buildMethod:function(containerId){containerId=document.getElementById(containerId);if(containerId){let licenseHtml="";Object.entries(openSouceLicense).map(([key,val])=>{licenseHtml+=embyALink([key,val.name,val.version,val.license].join(":"),val.url).outerHTML});var template=`
            <div id="${eleIds.consoleLogCtrl}"></div>
            <textarea id="${eleIds.consoleLogText}" readOnly style="resize: vertical;width: 100%;margin-top: 0.6em;" 
                rows="14" is="emby-textarea" class="txtOverview emby-textarea"></textarea>
            <div class="${embyFieldDescClass}">注意开启后原本控制台中调用方信息将被覆盖,不使用请保持关闭状态</div>
            <div>
                <h3>开发者选项</h3>
                <label class="${embyLabelClass}">调试开关(不持久化,自行开关): </label>
                <div id="${eleIds.debugCheckbox}"></div>
                <label class="${embyLabelClass}">调试按钮: </label>
                <div id="${eleIds.debugButton}"></div>
            </div>
            <div>
                <h3>开放源代码许可</h3>
                <div style="display: flex; flex-direction: column;">
                    ${licenseHtml}
                </div>
            </div>
        `;containerId.innerHTML=template.trim(),(container=>{let consoleLogEnable=lsGetItem(lsKeys.consoleLogEnable.id),consoleLogTextEle=container.querySelector("#"+eleIds.consoleLogText);consoleLogTextEle.style.display=consoleLogEnable?"":"none",consoleLogEnable&&doConsoleLogChange(consoleLogEnable),(container=container.querySelector("#"+eleIds.consoleLogCtrl)).appendChild(embyCheckbox({label:lsKeys.consoleLogEnable.name},consoleLogEnable,doConsoleLogChange)),container.appendChild(embyButton({label:"清除",iconKey:iconKeys.block},()=>{consoleLogTextEle.value="",window.ede.appLogAspect.value=""}))})(containerId),(container=>{let debugWrapper=container.querySelector("#"+eleIds.debugCheckbox);debugWrapper.appendChild(embyCheckbox({label:"弹幕容器边界"},!1,checked=>{var wrapper=document.getElementById(eleIds.danmakuWrapper);wrapper.style.backgroundColor=checked?"rgba(115, 160, 255, 0.3)":"",checked&&(console.log(`弹幕容器(#${eleIds.danmakuWrapper})宽高像素:`,wrapper.offsetWidth,wrapper.offsetHeight),checked=wrapper.firstChild,console.log(`实际舞台(${checked.tagName})宽高像素:`,checked.offsetWidth,checked.offsetHeight))})),debugWrapper.appendChild(embyCheckbox({label:"按钮容器边界"},!1,checked=>{var wrapper=document.getElementById(eleIds.danmakuCtr);wrapper.style.backgroundColor=checked?"rgba(115, 160, 255, 0.3)":"",checked&&console.log(`按钮容器(#${eleIds.danmakuCtr})宽高像素:`,wrapper.offsetWidth,wrapper.offsetHeight)}))})(containerId),(container=>{(container=container.querySelector("#"+eleIds.debugButton)).appendChild(embyButton({label:"打印视频加载方"},()=>{var _media=document.querySelector(mediaQueryStr);_media.src?console.log("视频加载方为 Web 端 <video> 标签:",_media.parentNode.outerHTML):(console.log("当前 <video> 标签为虚拟适配器:",_media.outerHTML),(_media=document.querySelector("embed"))?console.log("视频加载方为 <embed> 标签占位的 Native 播放器:",_media.parentNode.outerHTML):console.log("视频加载方为无占位标签的 Native 播放器,无信息"))}))})(containerId)}}}],danmakuTypeFilterOpts={bottom:{id:"bottom",name:"底部弹幕"},top:{id:"top",name:"顶部弹幕"},ltr:{id:"ltr",name:"从左至右"},onlyWhite:{id:"onlyWhite",name:"彩色弹幕"}},danmakuSource={AcFun:{id:"AcFun",name:"A站(AcFun)"},BiliBili:{id:"BiliBili",name:"B站(BiliBili)"},Gamer:{id:"Gamer",name:"巴哈(Gamer)"},DanDanPlay:{id:"DanDanPlay",name:"弹弹(DanDanPlay)"},"5dm":{id:"5dm",name:"D站(5dm)"},"异世界动漫":{id:"异世界动漫",name:"异世界动漫"}},showSource={source:{id:"source",name:"来源平台"},originalUserId:{id:"originalUserId",name:"来源用户id"},cid:{id:"cid",name:"来源cid"}},danmakuEngineOpts=[{id:"canvas",name:"canvas"},{id:"dom",name:"dom"}],danmakuChConverOpts=[{id:"0",name:"未启用"},{id:"1",name:"转换为简体"},{id:"2",name:"转换为繁体"}],danmakuFilterLevelOpts=[{id:"0",name:"0"},{id:"1",name:"1"},{id:"2",name:"2"},{id:"3",name:"3"}],danmakuHeightRateOpts=[{id:"1",name:"100%"},{id:"0.75",name:"75%"},{id:"0.5",name:"50%"},{id:"0.25",name:"25%"}],timelineOffsetBtns=[{label:"-30",valueOffset:"-30",iconKey:iconKeys.replay_30,style:embyOffsetBtnStyle},{label:"-10",valueOffset:"-10",iconKey:iconKeys.replay_10,style:embyOffsetBtnStyle},{label:"-5",valueOffset:"-5",iconKey:iconKeys.replay_5,style:embyOffsetBtnStyle},{label:"-1",valueOffset:"-1",iconKey:iconKeys.replay,style:embyOffsetBtnStyle},{label:"0",valueOffset:"0",iconKey:iconKeys.reset,style:embyOffsetBtnStyle},{label:"+1",valueOffset:"1",iconKey:iconKeys.replay,style:embyOffsetBtnStyle+" transform: rotateY(180deg);"},{label:"+5",valueOffset:"5",iconKey:iconKeys.forward_5,style:embyOffsetBtnStyle},{label:"+10",valueOffset:"10",iconKey:iconKeys.forward_10,style:embyOffsetBtnStyle},{label:"+30",valueOffset:"30",iconKey:iconKeys.forward_30,style:embyOffsetBtnStyle}],danmuListOpts=[{id:"0",name:"不启用",onChange:()=>[]},{id:"1",name:"显示屏中",onChange:ede=>ede.danmaku._.runningList},{id:"2",name:"显示所有",onChange:ede=>ede.commentsParsed},{id:"3",name:"显示加载",onChange:ede=>ede.danmaku.comments},{id:"4",name:"显示被过滤",onChange:ede=>ede.commentsParsed.filter(s=>!ede.danmaku.comments.some(t=>s.cuid===t.cuid))}],lsKeys={chConvert:{id:"danmakuChConvert",defaultValue:1,name:"简繁转换"},switch:{id:"danmakuSwitch",defaultValue:!0,name:"弹幕开关"},filterLevel:{id:"danmakuFilterLevel",defaultValue:0,name:"密度等级"},heightRate:{id:"danmakuHeightRate",defaultValue:1,name:"高度比例"},fontSizeRate:{id:"danmakuFontSizeRate",defaultValue:1,name:"大小"},fontOpacity:{id:"danmakuFontOpacity",defaultValue:1,name:"透明度"},speed:{id:"danmakuBaseSpeed",defaultValue:1,name:"速度"},timelineOffset:{id:"danmakuTimelineOffset",defaultValue:0,name:"轴偏秒"},typeFilter:{id:"danmakuTypeFilter",defaultValue:[],name:"屏蔽类型"},sourceFilter:{id:"danmakuSourceFilter",defaultValue:[],name:"屏蔽来源平台"},showSource:{id:"danmakuShowSource",defaultValue:[],name:"显示每条来源"},engine:{id:"danmakuEngine",defaultValue:"canvas",name:"弹幕引擎"},filterKeywords:{id:"danmakuFilterKeywords",defaultValue:"",name:"屏蔽关键词"},filterKeywordsEnable:{id:"danmakuFilterKeywordsEnable",defaultValue:!0,name:"屏蔽关键词启用"},danmuList:{id:"danmakuDanmuList",defaultValue:0,name:"弹幕列表"},consoleLogEnable:{id:"danmakuConsoleLogEnable",defaultValue:!1,name:"控制台日志"}},embyLabelClass="inputLabel",embyInputClass="emby-input emby-input-smaller",embyIconButtonClass="osdIconButton hide paper-icon-button-light",embySelectWrapperClass="emby-select-wrapper emby-select-wrapper-smaller",embyCheckboxListClass="featureList",embyFieldDescClass="fieldDescription",embyTabsMenuClass="headerMiddle headerSection sectionTabs headerMiddle-withSectionTabs",embyTabsDivClass1="tabs-viewmenubar tabs-viewmenubar-backgroundcontainer focusable scrollX hiddenScrollX smoothScrollX scrollFrameX emby-tabs",embyTabsDivClass2="tabs-viewmenubar-slider emby-tabs-slider padded-left padded-right nohoverfocus scrollSliderX",embyTabsButtonClass="emby-button secondaryText emby-tab-button main-tab-button",embyCheckboxListStyle="display: flex;flex-wrap: wrap;",embySliderStyle="display: flex; align-items: center; gap: 1em; margin-bottom: 0.3em;";class EDE{constructor(){this.chConvert=lsGetItem(lsKeys.chConvert.id),this.danmaku=null,this.episode_info=null,this.ob=null,this.loading=!1,this.danmuCache={},this.commentsParsed=[],this.extConmentCache={},this.destroyIntervalIds=[],this.searchDanmakuOpts={},this.appLogAspect=null}}class AppLogAspect{constructor(){this.initialized=!1,this.originalError=console.error,this.originalLog=console.log,this.originalOnerror=null,this.value="",this.listeners=[]}init(){return this.initialized||(console.error=(...args)=>{this.originalError.apply(console,args),this.value+=this.format("ERROR",args),this.notifyListeners()},console.log=(...args)=>{this.originalLog.apply(console,args),this.value+=this.format("INFO",args),this.notifyListeners()},this.originalOnerror=window.onerror,window.onerror=(...args)=>{console.error(args),"function"==typeof this.originalOnerror&&this.originalOnerror(...args)},this.initialized=!0),this}destroy(clearValue=!0){return this.initialized&&(console.error=this.originalError,console.log=this.originalLog,window.onerror=this.originalOnerror,clearValue&&(this.value=""),this.listeners=[],this.initialized=!1),this}format(level,args){return`[${new Date(Date.now()).toLocaleString()}] [${level}] : `+args.map(arg=>"string"==typeof arg?arg:JSON.stringify(arg)).join(" ")+"\n"}on(valueChangedCallback){if(valueChangedCallback.toString().includes("console.log")||valueChangedCallback.toString().includes("console.error"))throw new Error("The callback function must not contain console.log or console.error to avoid infinite loops.");this.listeners.push(()=>valueChangedCallback(this.value))}notifyListeners(){this.listeners.forEach(listener=>listener())}clearValue(){this.value="",this.notifyListeners()}}async function fetchSearchEpisodes(anime,episode){if(anime)return anime=dandanplayAPI.searchEpisodes(anime,episode),episode=await fetch(anime,{method:"GET",headers:{"Accept-Encoding":"gzip",Accept:"application/json","User-Agent":navigator.userAgent}}).then(response=>response.json()).catch(error=>(console.log("查询失败:",error),null)),console.log("查询成功",episode),episode;throw new Error("anime is required")}async function fetchExtcomment(extUrl){extUrl=dandanplayAPI.extcomment(extUrl);return fetch(extUrl,{method:"GET",headers:{"Accept-Encoding":"gzip",Accept:"application/json","User-Agent":navigator.userAgent}}).then(response=>response.json()).then(data=>(console.log("第三方url弹幕获取成功: "+data.comments.length),data.comments)).catch(error=>(console.log("第三方url弹幕获取失败:",error),null))}async function getMapByEmbyItemInfo(){var item=await window.require(["playbackManager"]).then(items=>items?.[0].currentItem());if(!item)return null;let _id,animeName,animeId=-1,episode;"Episode"==item.Type?(_id=item.SeasonId,animeName=item.SeriesName,episode=item.IndexNumber,1!=(session=item.ParentIndexNumber)&&(animeName+=" "+session)):(_id=item.Id,animeName=item.Name,episode="movie");var session="_anime_id_rel_"+_id,_name_key="_anime_name_rel_"+_id,_episode_key="_episode_id_rel_"+_id+"_"+episode;return window.localStorage.getItem(session)&&(animeId=window.localStorage.getItem(session)),window.localStorage.getItem(_name_key)&&(animeName=window.localStorage.getItem(_name_key)),{_id:_id,_id_key:session,_name_key:_name_key,_episode_key:_episode_key,animeId:animeId,episode:episode,animeName:animeName,seriesOrMovieId:item.SeriesId||item.Id}}async function createDanmaku(comments){if(comments){null!=window.ede.danmaku&&(window.ede.danmaku.destroy(),window.ede.danmaku=null);var comments=danmakuParser(comments),comments=(comments=>(comments=>{if(!lsGetItem(lsKeys.filterKeywordsEnable.id))return comments;let keywords=lsGetItem(lsKeys.filterKeywords.id)?.split(/\r?\n/).map(k=>k.trim()).filter(k=>0<k.length&&!k.startsWith("// "));if(0===keywords.length)return comments;let cKeys=["text",...Object.keys(showSource)];return comments.filter(comment=>!keywords.some(keyword=>{try{return cKeys.some(key=>new RegExp(keyword).test(comment[key]))}catch(error){return cKeys.some(key=>comment[key].includes(keyword))}}))})(comments=(comments=>{var level=lsGetItem(lsKeys.filterLevel.id);if(0==level)return comments;var limit=9-2*level,arr_comments=[],vertical_comments=[];for(let index=0;index<comments.length;index++){var element=comments[index],i=Math.ceil(element.time),i_v=Math.ceil(element.time/3);arr_comments[i]||(arr_comments[i]=[]),vertical_comments[i_v]||(vertical_comments[i_v]=[]),vertical_comments[i_v].length<6?vertical_comments[i_v].push(element):element.mode="rtl",arr_comments[i].length<limit&&arr_comments[i].push(element)}return arr_comments.flat()})(comments=(comments=>comments.filter(c=>!lsGetItem(lsKeys.sourceFilter.id).includes(c.source)))(comments=(comments=>{let idArray=lsGetItem(lsKeys.typeFilter.id);return idArray.includes(danmakuTypeFilterOpts.onlyWhite.id)&&(comments=comments.filter(c=>"#ffffff"===c.style.color.toLowerCase().slice(0,7)),idArray.splice(idArray.indexOf(danmakuTypeFilterOpts.onlyWhite.id),1)),comments=0<idArray.length?comments.filter(c=>!idArray.includes(c.mode)):comments})(comments=[...comments])))))(window.ede.commentsParsed=comments),_container=(console.log("弹幕加载成功: "+comments.length),document.querySelector(mediaContainerQueryStr));let _media=document.querySelector(mediaQueryStr);if(!_media)throw new Error("用户已退出视频播放");isVersionOld||(_media.style.position="absolute");let wrapper=document.getElementById(eleIds.danmakuWrapper);wrapper&&wrapper.remove(),(wrapper=document.createElement("div")).id=eleIds.danmakuWrapper,wrapper.style.position="fixed",wrapper.style.width="100%",wrapper.style.height=`calc(${100*lsGetItem(lsKeys.heightRate.id)}% - 0px)`,wrapper.style.top="0px",wrapper.style.pointerEvents="none",_container.prepend(wrapper);var _speed=144*lsGetItem(lsKeys.speed.id);window.ede.danmaku=new Danmaku({container:wrapper,media:_media,comments:comments,engine:lsGetItem(lsKeys.engine.id),speed:_speed}),lsGetItem(lsKeys.switch.id)?window.ede.danmaku.show():window.ede.danmaku.hide(),window.ede.ob&&window.ede.ob.disconnect(),window.ede.ob=new ResizeObserver(()=>{window.ede.danmaku&&(console.log("Resizing"),window.ede.danmaku.resize())}),window.ede.ob.observe(_container),_media.src||require(["playbackManager"],playbackManager=>{playbackManager.getPlayerState().PlayState.IsPaused&&_media.dispatchEvent(new Event("pause"))}),buildCurrentDanmakuInfo(currentDanmakuInfoContainerId)}}function loadDanmaku(loadType=LOAD_TYPE.CHECK){window.ede.loading?console.log("正在重新加载"):(window.ede.loading=!0,(async is_auto=>{var itemInfoMap=await getMapByEmbyItemInfo();if(!itemInfoMap)return null;var{_episode_key,animeId}=itemInfoMap,{animeName,episode}=itemInfoMap;if(is_auto&&window.localStorage.getItem(_episode_key))return JSON.parse(window.localStorage.getItem(_episode_key));let animeOriginalTitle=null,animaInfo=await fetchSearchEpisodes(animeName,is_auto?episode:null);if(is_auto&&0==animaInfo.animes.length&&(console.log(`标题名: ${animeName},自动匹配未查询到结果,将使用原标题名,重试一次`),(itemInfoMap=await ApiClient.getItem(ApiClient.getCurrentUserId(),itemInfoMap.seriesOrMovieId)).OriginalTitle)&&(animeName=itemInfoMap.OriginalTitle,0<(animaInfo=await fetchSearchEpisodes(animeName,is_auto?episode:null)).animes.length&&console.log(`使用原标题名: ${animeName},自动匹配成功`),animeOriginalTitle=animeName),0==animaInfo.animes.length)return console.log("弹幕查询无结果"),null;let selectAnime_id=1;if(-1!=animeId)for(let index=0;index<animaInfo.animes.length;index++)animaInfo.animes[index].animeId==animeId&&(selectAnime_id=index+1);return selectAnime_id=parseInt(selectAnime_id)-1,itemInfoMap={episodeId:animaInfo.animes[selectAnime_id].episodes[0].episodeId,episodeTitle:"tvseries"==animaInfo.animes[selectAnime_id].type?animaInfo.animes[selectAnime_id].episodes[0].episodeTitle:null,animeId:animaInfo.animes[selectAnime_id].animeId,animeTitle:animaInfo.animes[selectAnime_id].animeTitle,animeOriginalTitle:animeOriginalTitle},localStorage.setItem(_episode_key,JSON.stringify(itemInfoMap)),itemInfoMap})(loadType!==LOAD_TYPE.SEARCH).then(info=>new Promise((resolve,reject)=>{info||(loadType!==LOAD_TYPE.INIT?reject("播放器未完成加载"):reject(null)),loadType!==LOAD_TYPE.SEARCH&&loadType!==LOAD_TYPE.REFRESH&&loadType!==LOAD_TYPE.RELOAD&&window.ede.danmaku&&window.ede.episode_info&&window.ede.episode_info.episodeId==info.episodeId?reject("当前播放视频未变动"):resolve((window.ede.episode_info=info).episodeId)})).then(episodeId=>{episodeId&&(loadType===LOAD_TYPE.RELOAD&&window.ede.danmuCache[episodeId]?createDanmaku(window.ede.danmuCache[episodeId]).then(()=>{console.log("弹幕就位")}).catch(err=>{console.log(err)}):(async episodeId=>(episodeId=dandanplayAPI.comment(episodeId,window.ede.chConvert),fetch(episodeId,{method:"GET",headers:{"Accept-Encoding":"gzip",Accept:"application/json","User-Agent":navigator.userAgent}}).then(response=>response.json()).then(data=>(console.log("弹幕获取成功: "+data.comments.length),data.comments)).catch(error=>(console.log("弹幕获取失败:",error),null))))(episodeId).then(comments=>{createDanmaku(window.ede.danmuCache[episodeId]=comments).then(()=>{console.log("弹幕就位")}).catch(err=>{console.log(err)})}))},msg=>{msg&&console.log(msg)}).then(()=>{window.ede.loading=!1;var danmakuCtrEle=document.getElementById(eleIds.danmakuCtr);danmakuCtrEle&&"1"!==danmakuCtrEle.style.opacity&&(danmakuCtrEle.style.opacity="1")}).catch(err=>{console.log(err)}))}function danmakuParser($obj){var fontSizeRate=lsGetItem(lsKeys.fontSizeRate.id);let fontSize=25;var h3Ele=document.querySelector(".videoOsdTitle");fontSize=h3Ele?parseFloat(getComputedStyle(h3Ele).fontSize.replace("px",""))*fontSizeRate:Math.round(18*(window.screen.height>window.screen.width?window.screen.width:window.screen.height/1080)*fontSizeRate);let fontOpacity=Math.round(255*lsGetItem(lsKeys.fontOpacity.id)).toString(16),timelineOffset=lsGetItem(lsKeys.timelineOffset.id),sourceUidReg=/\[(.*)\](.*)/,showSourceIds=lsGetItem(lsKeys.showSource.id);return $obj.map($comment=>{var values=$comment.p.split(","),mode={6:"ltr",1:"rtl",5:"top",4:"bottom"}[values[1]];if(!mode)return null;var color=("000000"+Number(values[2]).toString(16)+fontOpacity).slice(-8);let cmt={text:$comment.m,mode:mode,time:+values[0]+timelineOffset,style:{fontSize:fontSize+"px",color:"#"+color,textShadow:"00000"===color?"-1px -1px #fff, -1px 1px #fff, 1px -1px #fff, 1px 1px #fff":"-1px -1px #000, -1px 1px #000, 1px -1px #000, 1px 1px #000",font:fontSize+"px sans-serif",fillStyle:"#"+color,strokeStyle:"000000"===color?"#ffffff"+fontOpacity:"#000000"+fontOpacity,lineWidth:2},[showSource.cid.id]:$comment.cid,[showSource.source.id]:values[3].match(sourceUidReg)?.[1]||danmakuSource.DanDanPlay.id,[showSource.originalUserId.id]:values[3].match(sourceUidReg)?.[2]||values[3]};return 0<showSourceIds.length&&(cmt.originalText=cmt.text,cmt.text+=showSourceIds.map(id=>id===showSource.source.id?`,[${cmt[id]}]`:","+cmt[id]).join("")),cmt.cuid=cmt[showSource.cid.id]+","+cmt[showSource.originalUserId.id],cmt}).filter(x=>x).sort((a,b)=>a.time-b.time)}async function afterEmbyDialogCreated(dialogContainer){require(["css!modules/emby-elements/emby-textarea/emby-textarea.css","css!modules/emby-elements/emby-select/emby-select.css"]);var itemInfoMap=await getMapByEmbyItemInfo(),itemInfoMap=(window.ede.searchDanmakuOpts={_id_key:itemInfoMap._id_key,_name_key:itemInfoMap._name_key,_episode_key:itemInfoMap._episode_key,animeId:itemInfoMap.animeId,animeName:itemInfoMap.animeName,seriesOrMovieId:itemInfoMap.seriesOrMovieId,episode:(parseInt(itemInfoMap.episode)||1)-1,animes:[]},document.querySelector(".formDialogHeader")),formDialogFooter=document.querySelector(".formDialogFooter"),itemInfoMap=itemInfoMap||dialogContainer,tabsMenuContainer=document.createElement("div");tabsMenuContainer.className=embyTabsMenuClass,tabsMenuContainer.appendChild(embyTabs(danmakuTabOpts,danmakuTabOpts[0].id,"id","name",value=>{danmakuTabOpts.forEach(obj=>{var elem=document.getElementById(obj.id);elem&&(elem.hidden=obj.id!==value.id)})})),itemInfoMap.appendChild(tabsMenuContainer),itemInfoMap.style="width: 100%; padding: 0; height: auto;",danmakuTabOpts.forEach((tab,index)=>{var tabContainer;tab.hidden||((tabContainer=document.createElement("div")).id=tab.id,tabContainer.style.textAlign="left",tabContainer.hidden=0!=index,dialogContainer.appendChild(tabContainer),tab.buildMethod(tab.id))}),formDialogFooter&&(formDialogFooter.style.padding="0.3em")}function buildCurrentDanmakuInfo(containerId){var episodeTitle,animeTitle,loadSum,downloadSum,animeId,containerId=document.getElementById(containerId);containerId&&window.ede.episode_info&&({episodeTitle,animeId,animeTitle}=window.ede.episode_info,loadSum=window.ede.danmaku?.comments.length??0,downloadSum=window.ede.commentsParsed.length,animeId=`
            <div style="display: flex;">
                ${animeId&&-1!==animeId?`<img src="${dandanplayAPI.posterImg(animeId)}" style="width: 20%;height: 100%;margin-right: 2%;" 
                    loading="lazy" decoding="async" draggable="false" class="coveredImage-noScale"></img>`:""}
                <div>
                    <div>
                        <label class="${embyLabelClass}">媒体名: </label>
                        <div class="${embyFieldDescClass}">${animeTitle}</div>
                    </div>
                    ${episodeTitle?`<div>
                        <label class="${embyLabelClass}">分集名: </label>
                        <div class="${embyFieldDescClass}">${episodeTitle}</div>
                    </div>`:""}
                    <div>
                        <label class="${embyLabelClass}">其它信息: </label>
                        <div class="${embyFieldDescClass}">
                            获取总数: ${downloadSum}, 
                            加载总数: ${loadSum}, 
                            被过滤数: ${downloadSum-loadSum}
                        </div>
                    </div>
                </div>
            </div>
            <div style="margin-top: 2%;">
                <label class="${embyLabelClass}">${lsKeys.danmuList.name}: </label>
                <div id="${eleIds.danmuListDiv}" style="margin: 1% 0;"></div>
                <textarea id="${eleIds.danmuListText}" readOnly style="display: none;resize: vertical;width: 100%" rows="8" 
                    is="emby-textarea" class="txtOverview emby-textarea"></textarea>
            </div>
        `,containerId.innerHTML=animeId.trim(),containerId.querySelector("#"+eleIds.danmuListDiv).appendChild(embyTabs(danmuListOpts.concat(Object.values(window.ede.extConmentCache).map((value,index)=>({id:"ext"+(index+1),name:"附加"+(index+1),onChange:()=>danmakuParser(value)}))),lsKeys.danmuList.defaultValue,"id","name",doDanmuListOptsChange)))}function doDanmakuSwitch(){console.log("切换弹幕开关");var flag=!lsGetItem(lsKeys.switch.id),switchElement=(flag?window.ede.danmaku.show():window.ede.danmaku.hide(),document.getElementById(eleIds.danmakuSwitchBtn).firstChild.innerHTML=flag?iconKeys.comment:iconKeys.comments_disabled,document.getElementById(eleIds.danmakuSwitch));switchElement&&(switchElement.firstChild.innerHTML=flag?iconKeys.switch_on:iconKeys.switch_off,switchElement.style.color=flag?"#52b54b":""),lsSetItem(lsKeys.switch.id,flag)}async function doDanmakuSearchEpisode(){var danmakuRemarkEle,selectAnimeIdx,animeSelect,spinnerEle,embySearch=document.getElementById(eleIds.danmakuSearchName);embySearch&&(embySearch=embySearch.value,(danmakuRemarkEle=document.getElementById(eleIds.danmakuRemark)).innerText=embySearch?"":"请填写标题",(spinnerEle=document.querySelector(".mdl-spinner")).classList.remove("hide"),embySearch=await fetchSearchEpisodes(embySearch),spinnerEle.classList.add("hide"),!embySearch||embySearch.animes.length<1?(danmakuRemarkEle.innerText="搜索结果为空",document.getElementById(eleIds.danmakuSwitchEpisode).disabled=!0,document.getElementById(eleIds.danmakuEpisodeFlag).hidden=!0):(danmakuRemarkEle.innerText="",spinnerEle=document.getElementById(eleIds.danmakuAnimeDiv),danmakuRemarkEle=document.getElementById(eleIds.danmakuEpisodeNumDiv),spinnerEle.innerHTML="",danmakuRemarkEle.innerHTML="",embySearch=embySearch.animes,selectAnimeIdx=-1!==(selectAnimeIdx=(window.ede.searchDanmakuOpts.animes=embySearch).findIndex(anime=>anime.animeId==window.ede.searchDanmakuOpts.animeId))?selectAnimeIdx:0,animeSelect=embySelect({id:eleIds.danmakuAnimeSelect,label:"剧集: ",style:"width: auto;max-width: 100%;"},selectAnimeIdx,embySearch,"animeId",opt=>opt.animeTitle+" 类型："+opt.typeDescription,doDanmakuAnimeSelect),spinnerEle.appendChild(animeSelect),spinnerEle=embySelect({id:eleIds.danmakuEpisodeNumSelect,label:"集数: ",style:"width: auto;max-width: 100%;"},window.ede.searchDanmakuOpts.episode,embySearch[selectAnimeIdx].episodes,"episodeId","episodeTitle"),danmakuRemarkEle.appendChild(spinnerEle),document.getElementById(eleIds.danmakuEpisodeFlag).hidden=!1,document.getElementById(eleIds.danmakuSwitchEpisode).disabled=!1,document.getElementById(eleIds.searchImg).src=dandanplayAPI.posterImg(embySearch[selectAnimeIdx].animeId)))}function doSearchTitleSwtich(e){let searchInputEle=document.getElementById(eleIds.danmakuSearchName),attrKey="isOriginalTitle";if("1"===e.target.getAttribute(attrKey))return e.target.setAttribute(attrKey,"0"),searchInputEle.value=window.ede.searchDanmakuOpts.animeName;let{_episode_key,seriesOrMovieId}=window.ede.searchDanmakuOpts,episode_info=JSON.parse(localStorage.getItem(_episode_key));var animeOriginalTitle=episode_info.animeOriginalTitle;if(animeOriginalTitle)return e.target.setAttribute(attrKey,"1"),searchInputEle.value=animeOriginalTitle;ApiClient.getItem(ApiClient.getCurrentUserId(),seriesOrMovieId).then(item=>{item.OriginalTitle&&(e.target.setAttribute(attrKey,"1"),searchInputEle.value=item.OriginalTitle,episode_info.animeOriginalTitle=item.OriginalTitle,localStorage.setItem(_episode_key,JSON.stringify(episode_info)),window.ede.episode_info.animeOriginalTitle=item.OriginalTitle)})}function doDanmakuAnimeSelect(value,index,option){var numDiv=document.getElementById(eleIds.danmakuEpisodeNumDiv),anime=(numDiv.innerHTML="",window.ede.searchDanmakuOpts.animes[index]),index=embySelect({id:eleIds.danmakuEpisodeNumSelect,label:"集数: "},index,anime.episodes,"episodeId","episodeTitle");index.style.maxWidth="100%",numDiv.appendChild(index),document.getElementById(eleIds.searchImg).src=dandanplayAPI.posterImg(anime.animeId)}function doDanmakuSwitchEpisode(){var animeSelect=document.getElementById(eleIds.danmakuAnimeSelect),episodeNumSelect=document.getElementById(eleIds.danmakuEpisodeNumSelect),animeSelect=window.ede.searchDanmakuOpts.animes[animeSelect.selectedIndex],episodeNumSelect={episodeId:episodeNumSelect.value,episodeTitle:"tvseries"==animeSelect.type?episodeNumSelect.options[episodeNumSelect.selectedIndex].text:null,animeId:animeSelect.animeId,animeTitle:animeSelect.animeTitle};localStorage.setItem(window.ede.searchDanmakuOpts._episode_key,JSON.stringify(episodeNumSelect)),console.log("手动匹配信息:",episodeNumSelect),loadDanmaku(LOAD_TYPE.RELOAD),closeEmbyDialog()}function doDanmakuEngineSelect(value){value=value.id;lsCheckSet(lsKeys.engine.id,value)&&(console.log("已更改弹幕引擎为: "+value),loadDanmaku(LOAD_TYPE.RELOAD))}function doDanmakuChConverChange(value){window.ede.chConvert=value.id,lsSetItem(lsKeys.chConvert.id,window.ede.chConvert),loadDanmaku(LOAD_TYPE.REFRESH),console.log(value.name)}function doDanmuListOptsChange(value,index){var danmuListEle=document.getElementById(eleIds.danmuListText);danmuListEle.style.display=index==lsKeys.danmuList.defaultValue?"none":"";let f=new Intl.DateTimeFormat("default",{minute:"2-digit",second:"2-digit"}),hasShowSourceIds=0<lsGetItem(lsKeys.showSource.id).length;danmuListEle.value=value.onChange(window.ede).map((c,i)=>`[${i+1}] [${f.format(new Date(1e3*c.time))}] : `+`${hasShowSourceIds?c.originalText:c.text} [${c.source}],[${c.originalUserId}],[${c.cid}]`).join("\n")}function doDanmakuTypeFilterSelect(){var checkList=Array.from(document.getElementsByName(eleIds.danmakuTypeFilterSelectName)).filter(item=>item.checked).map(item=>item.value);lsSetItem(lsKeys.typeFilter.id,checkList),loadDanmaku(LOAD_TYPE.RELOAD);let idNameMap=new Map(Object.values(danmakuTypeFilterOpts).map(opt=>[opt.id,opt.name]));console.log("当前弹幕类型过滤为: "+JSON.stringify(checkList.map(s=>idNameMap.get(s))))}function doDanmakuSourceFilterSelect(){var checkList=Array.from(document.getElementsByName(eleIds.danmakuSourceFilterSelectName)).filter(item=>item.checked).map(item=>item.value);lsSetItem(lsKeys.sourceFilter.id,checkList),loadDanmaku(LOAD_TYPE.RELOAD),console.log("当前弹幕来源平台过滤为: "+JSON.stringify(checkList))}function doDanmakuShowSourceSelect(){var checkList=Array.from(document.getElementsByName(eleIds.danmakuShowSourceSelectName)).filter(item=>item.checked).map(item=>item.value);lsSetItem(lsKeys.showSource.id,checkList),loadDanmaku(LOAD_TYPE.RELOAD);let idNameMap=new Map(Object.values(showSource).map(opt=>[opt.id,opt.name]));console.log("当前弹幕显示来源为: "+JSON.stringify(checkList.map(s=>idNameMap.get(s))))}function onDanmakuStyleChange(val,props){onDanmakuStyleChangeLabel(val,props),props?.key&&lsCheckSet(props.key,val)&&(console.log(props.key+" changed to "+val),loadDanmaku(LOAD_TYPE.RELOAD))}function onDanmakuStyleChangeLabel(val,props){props?.labelId&&(document.getElementById(props.labelId).innerText=val)}function doDanmakuFilterKeywordsBtnClick(event){var event=event.currentTarget,event=(event&&(event.style="",event.disabled=!0),document.getElementById(eleIds.filterKeywordsId).value.trim()),enable=document.getElementById(eleIds.filterKeywordsEnableId).checked;lsCheckSet(lsKeys.filterKeywordsEnable.id,enable),!lsCheckSet(lsKeys.filterKeywords.id,event)&&""===event||loadDanmaku(LOAD_TYPE.RELOAD)}function updateFilterKeywordsBtn(btn,flag,keywords){flag=lsCheckOld(lsKeys.filterKeywordsEnable.id,flag)&&lsCheckOld(lsKeys.filterKeywords.id,keywords);btn.firstChild.innerHTML=flag?iconKeys.done_disabled:iconKeys.done,btn.disabled=flag}function doConsoleLogChange(checked){lsSetItem(lsKeys.consoleLogEnable.id,checked);let consoleLogTextEle=document.getElementById(eleIds.consoleLogText);consoleLogTextEle.style.display=checked?"":"none",checked?(window.ede.appLogAspect||(window.ede.appLogAspect=(new AppLogAspect).init()),consoleLogTextEle.value=window.ede.appLogAspect.value,window.ede.appLogAspect.on(newValue=>{consoleLogTextEle.value.length!==newValue.length&&(consoleLogTextEle.value=newValue,consoleLogTextEle.scrollTop=consoleLogTextEle.scrollHeight)})):(consoleLogTextEle.value="",window.ede.appLogAspect.destroy(),window.ede.appLogAspect=null)}function embyInput(props,onEnter,onChange){let input=document.createElement("input",{is:"emby-input"});return Object.entries(props).forEach(([key,value])=>{"function"!=typeof value&&input.setAttribute(key,value)}),input.className=embyInputClass,"function"==typeof onEnter&&input.addEventListener("keyup",e=>{"Enter"===e.key&&onEnter(e)}),"function"==typeof onChange&&input.addEventListener("change",onChange),input.addEventListener("keydown",event=>{var options;"ArrowLeft"!==event.key&&"ArrowRight"!==event.key||!(0===input.selectionStart&&"ArrowLeft"===event.key||input.selectionEnd===input.value.length&&"ArrowRight"===event.key)||(event.stopPropagation(),event.preventDefault(),options={sourceElement:event.target,repeat:event.repeat,originalEvent:event},require(["inputmanager"],inputmanager=>{inputmanager.trigger(event.key.replace("Arrow","").toLowerCase(),options)}))}),input}function embyButton(props,onClick){let button=document.createElement("button",{is:"emby-button"});return button.setAttribute("type","button"),Object.entries(props).forEach(([key,value])=>{"iconKey"!==key&&"function"!=typeof value&&button.setAttribute(key,value)}),props.iconKey?(button.setAttribute("title",props.label),button.setAttribute("aria-label",props.label),button.innerHTML=`<i class="md-icon md-icon-fill osdIconButton-icon">${props.iconKey}</i>`,button.className=embyIconButtonClass):(button.className="btnOption raised emby-button",button.textContent=props.label),"function"==typeof onClick&&button.addEventListener("click",onClick),button}function embyTabs(options,selectedValue,optionValueKey,optionTitleKey,onChange){var tabs=document.createElement("div",{is:"emby-tabs"});tabs.setAttribute("data-index","0"),tabs.className=embyTabsDivClass1,tabs.style.width="fit-content";let tabsSlider=document.createElement("div");return tabsSlider.className=embyTabsDivClass2,tabsSlider.style.padding="0.25em",options.forEach((option,index)=>{var value,tabButton;option.hidden||(value=getValueOrInvoke(option,optionValueKey),option=getValueOrInvoke(option,optionTitleKey),(tabButton=document.createElement("button")).className=embyTabsButtonClass+(value==selectedValue?" emby-tab-button-active":""),tabButton.setAttribute("data-index",index),tabButton.textContent=option,tabsSlider.appendChild(tabButton))}),tabs.appendChild(tabsSlider),"function"==typeof onChange&&tabs.addEventListener("tabchange",e=>onChange(options[e.detail.selectedTabIndex],e.detail.selectedTabIndex)),tabs}function embySelect(props,selectedIndexOrValue,options,optionValueKey,optionTitleKey,onChange){props={class:"emby-select",...props},Number.isInteger(selectedIndexOrValue)||(selectedIndexOrValue=options.indexOf(selectedIndexOrValue));let selectElement=document.createElement("select",{is:"emby-select"});return Object.entries(props).forEach(([key,value])=>{"function"!=typeof value&&selectElement.setAttribute(key,value)}),options.forEach((option,index)=>{var value=getValueOrInvoke(option,optionValueKey),option=getValueOrInvoke(option,optionTitleKey),optionElement=document.createElement("option");optionElement.value=value,optionElement.textContent=option,index===selectedIndexOrValue&&(optionElement.selected=!0),selectElement.appendChild(optionElement)}),"function"==typeof onChange&&selectElement.addEventListener("change",e=>{onChange(e.target.value,e.target.selectedIndex,options[e.target.selectedIndex])}),selectElement}function embyCheckboxList(id,checkBoxName,selectedStrArray,options,onChange,isVertical=!1){let checkboxContainer=document.createElement("div");return checkboxContainer.setAttribute("class",embyCheckboxListClass),checkboxContainer.setAttribute("style",isVertical?"":embyCheckboxListStyle),checkboxContainer.setAttribute("id",id),options.forEach(option=>{checkboxContainer.appendChild(embyCheckbox({name:checkBoxName,label:option.name,value:option.id},-1<selectedStrArray?.indexOf(option.id),onChange))}),checkboxContainer}function embyCheckbox({id,name,label,value},checked=!1,onChange){var checkboxLabel=document.createElement("label"),checkbox=(checkboxLabel.classList.add("emby-checkbox-label"),checkboxLabel.setAttribute("style","width: auto;"),document.createElement("input",{is:"emby-checkbox"})),id=(checkbox.setAttribute("is","emby-checkbox"),checkbox.setAttribute("type","checkbox"),checkbox.setAttribute("id",id),checkbox.setAttribute("name",name),checkbox.setAttribute("value",value),checkbox.checked=checked,checkbox.classList.add("emby-checkbox","chkEnableLiveTvAccess"),"function"==typeof onChange&&checkbox.addEventListener("change",e=>onChange(e.target.checked)),document.createElement("span"));return id.setAttribute("class","checkboxLabel"),id.innerHTML=label,checkboxLabel.appendChild(checkbox),checkboxLabel.appendChild(id),checkboxLabel}function embySlider(props={},options={},onChange,onSliding){options={min:.1,max:3,step:.1,orient:"horizontal","data-bubble":!1,"data-hoverthumb":!0,style:"",...options};let slider=document.createElement("input",{is:"emby-slider"});return slider.setAttribute("type","range"),props.id&&slider.setAttribute("id",props.id),Object.entries(options).forEach(([key,value])=>slider.setAttribute(key,value)),options.value&&slider.setValue(options.value),"function"==typeof onChange&&slider.addEventListener("change",e=>onChange(e.target.value,props)),"function"==typeof onSliding&&slider.addEventListener("input",e=>onSliding(e.target.value,props)),slider.addEventListener("keydown",e=>{var orient=slider.getAttribute("orient")||"horizontal";("horizontal"!==orient||"ArrowLeft"!==e.key&&"ArrowRight"!==e.key)&&("vertical"!==orient||"ArrowUp"!==e.key&&"ArrowDown"!==e.key)||e.stopPropagation()}),slider}function closeEmbyDialog(){document.querySelector(".formDialogFooterItem").dispatchEvent(new Event("click"))}function embyALink(text,href){var aEle=document.createElement("a");return aEle.textContent=text,aEle.href=href,aEle.target="_blank",aEle.className="button-link button-link-color-inherit button-link-fontweight-inherit emby-button",aEle}async function embyToast(opts={}){return opts={text:"",secondaryText:"",icon:"",iconStrikeThrough:!1,...opts},require(["toast"],toast=>toast(opts))}function getValueOrInvoke(option,keyOrFunc){return"function"==typeof keyOrFunc?keyOrFunc(option):option[keyOrFunc]}function getSettingsJson(space=4){return JSON.stringify(Object.fromEntries(Object.entries(lsKeys).map(([,value])=>[value.id,lsGetItem(value.id)])),null,space)}function lsGetItem(id){var key=lsGetKeyById(id);return key?(key=lsKeys[key].defaultValue,null===(id=localStorage.getItem(id))?key:Array.isArray(key)||Array.isArray(key)||"object"==typeof key?JSON.parse(id):"boolean"==typeof key?"true"===id:"number"==typeof key?parseFloat(id):id):null}function lsCheckOld(id,value){return JSON.stringify(lsGetItem(id))===JSON.stringify(value)}function lsCheckSet(id,value){return!lsCheckOld(id,value)&&(lsSetItem(id,value),!0)}function lsSetItem(id,value){if(lsGetKeyById(id)){let stringValue;stringValue=Array.isArray(value)||"object"==typeof value?JSON.stringify(value):value,localStorage.setItem(id,stringValue)}}function lsGetKeyById(id){return Object.keys(lsKeys).find(key=>lsKeys[key].id===id)}function waitForElement(selector,callback,timeout=1e4,interval=check_interval){let intervalId=null,timeoutId=null;intervalId=setInterval(function(){console.log(`waitForElement: checking element[${selector}]`);var element=document.querySelector(selector);element&&(clearInterval(intervalId),clearTimeout(timeoutId),callback(element))},interval),window.ede.destroyIntervalIds.push(intervalId),0<timeout&&(timeoutId=setTimeout(()=>{clearInterval(intervalId),console.log(`waitForElement: unable to find element[${selector}], timeout: `+timeout)},timeout))}function initH5VideoAdapter(){let _media=document.querySelector(mediaQueryStr);var eventsMap,data;_media||(console.log("页面上不存在 video 标签,适配器处理开始"),(_media=document.createElement("video")).style.display="none",_media.id=eleIds.h5VideoAdapter,_media.classList.add("htmlvideoplayer","moveUpSubtitles"),document.body.prepend(_media),_media.play(),window.ede.destroyIntervalIds.push(setInterval(()=>{_media.currentTime+=.1},100)),eventsMap={timeupdate:(e,data)=>{_media.currentTime=data.playbackManager.currentTime(data.player)/1e7,_media.playbackRate=data.playbackManager.getPlayerState().PlayState.PlaybackRate??1},pause:(e,data)=>{_media.dispatchEvent(new Event("pause")),window.ede.destroyIntervalIds.map(id=>clearInterval(id)),window.ede.destroyIntervalIds=[]},unpause:(e,data)=>{_media.dispatchEvent(new Event("play")),window.ede.destroyIntervalIds.push(setInterval(()=>{_media.currentTime+=.1},100))}},data={},require(["playbackManager","events"],(playbackManager,events)=>{if(playbackManager&&events){let player=playbackManager.getCurrentPlayer(),playState=playbackManager.getPlayerState().PlayState;Object.entries(eventsMap).forEach(([eventName,fn])=>{events.off(player,eventName,fn),events.on(player,eventName,(e,...args)=>{fn(e,...args,{playbackManager:playbackManager,events:events,player:player,playState:playState,...data}),"timeupdate"!=eventName&&console.log(`playbackEventsOn ${eventName} event: `+fn.name)})})}}),console.log("已创建虚拟 video 标签,适配器处理正确结束"))}document.addEventListener("viewshow",function(e){console.log("viewshow",e),"video-osd"===e.detail.type&&(window.ede=new EDE,lsGetItem(lsKeys.consoleLogEnable.id)&&(window.ede.appLogAspect=(new AppLogAspect).init()),document.getElementById(eleIds.danmakuCtr)||(console.log("正在初始化UI"),parseFloat(ApiClient.serverVersion())<4.8&&(mediaContainerQueryStr='div[data-type="video-osd"]',isVersionOld=!0),waitForElement((mediaContainerQueryStr+=":not(.hide)")+" .videoOsdBottom-maincontrols .videoOsdBottom-buttons",parent=>{var rightButtons=parent.querySelector(".videoOsdBottom-buttons-right");let menubar=document.createElement("div");menubar.id=eleIds.danmakuCtr,window.ede.episode_info||(menubar.style.opacity=.5),rightButtons?parent.insertBefore(menubar,rightButtons):parent.append(menubar),mediaBtnOpts.forEach(opt=>{menubar.appendChild(embyButton(opt,opt.onClick))}),console.log("UI初始化完成")},0)),initH5VideoAdapter(),(e=document.querySelector(mediaQueryStr))?e.getAttribute("ede_listening")||(console.log("正在初始化Listener"),e.setAttribute("ede_listening",!0),e.addEventListener("play",loadDanmaku),console.log("Listener初始化完成")):window.ede.episode_info&&(window.ede.episode_info=null))}),document.addEventListener("viewbeforehide",e=>"video-osd"===e.detail.type&&(window.ede.danmaku?.clear(),window.ede.appLogAspect?.destroy(),window.ede.appLogAspect=null,document.getElementById(eleIds.danmakuCtr)?.remove(),window.ede.destroyIntervalIds.map(id=>clearInterval(id)),window.ede.destroyIntervalIds=[],void lsSetItem(lsKeys.timelineOffset.id,lsKeys.timelineOffset.defaultValue)))})();